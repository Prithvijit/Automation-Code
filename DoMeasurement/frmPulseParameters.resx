<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/AGQA/wBmAP8AaQD/AGsA/wBsAP8AbQD/AG4A/wBvAP8AcAD/AHIA/wBzAP8AdAD/AHUA/wB2AP8A
        dwD/AHgA/wB5AP8AegD/AHsA/wB8AP8AfQD/AH4A/wB/AP8AgAD/AIEA/wCEAP8AhQD/AIYA/wCHAP8G
        dAD/AIoA/wCMAP8GeAD/AI4A/wCPAP8HeAD/A4kA/wh5AP8KkAD/CZQA/xJ4AP8KmAD/EYsA/xt7AP8U
        mAD/GJEA/yCBAP8ohQD/KYUA/yKjAP8sigD/LI4A/zGHAP8pogD/LZ8A/yymAP85iQD/L6sA/zabAP8y
        qwD/PZ4A/0iMAP8+rwD/QLIA/1KVAP9bmAD/WZ8A/1G6AP9cngD/VLsA/1+bAP9YuQD/WL8A/2GmAP9g
        vQD/ZMYA/2XGAP9woQD/cKIA/3KiAP94pgD/eaYA/3LEAP+BqAD/gakA/4KsAP95zwD/fM4A/3zQAP+I
        rQD/jLIA/4TVAP+K1gD/lrIA/5i2AP+T1AD/ltIA/5+1AP+c1gD/m90A/6a7AP+pygD/rMAA/67BAP+v
        wAD/p9wA/7HBAP+v5wD/seYA/7bpAP+/zAD/u+UA/8DuAP/LzwD/xOkA/8zTAP/E8AD/xvIA/8/VAP/Q
        1AD/x/QA/8jxAP/I8gD/y+sA/9XVAP/N9gD/2tcA/9raAP/R+wD/4tgA/+HcAP/c/AD/4+wA/+fiAP/k
        8AD/4f4A/+jpAP/r6wD/6P8A/+3/AP/16wD/9e0A//brAP/46QD/+fEA//b/AP//7AD//vEA//7yAP/7
        /wD///UA///5AP//+gD//v8A///+AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubHwJCmpubm5tSPEmbm5ubm0gBM4ybm5ubm5ubm5ubm4oEFhIN
        hZubm1sHBZObm5ubHhMUDWabm5ubm5ubm5ubmxIQXYcGdpubgwsNcZubm5sfD02bIlObm5ubm5ubm5ub
        LA5Gm3gAc5ubJg5Rm5ubmzsOPZubIWGbm5ubm5ubm5tFDiibm2KQm5s+DjSbm5ubVwwOmpubhpubm5ub
        m5ubm2MMDI+bm5ubm1wMD5abm5t9DQuCm5ubm5ubm5ubm5ubiw4NZ5ubm5ubgAgLf5ubm5sbDlmbm5ub
        m5ubm5ubm5ubJw9Am5ubm5ubGQ9Um5ubmz8OK5ubm5ubm5ubm5ubm5tLDR2bm5ubm5s3ECWbm5ubawoJ
        kpubm5ubm5ubm5ubm3kMC4Gbm5ubm1YND1Wbm5uRFw5em5ubm5ubm5ubm4SbmxwOUJube4mbcA0UKlqb
        m5sxDzibm5ubm5ubm5uZGmSbQw0wm5tsI5ibGAx3OUGbm1gNDJSbm5ubm5ubm5uVFERKEAqOm5t1IJsp
        Dk+bTANlRxAMfJubm5ubm5ubm5ubNQIRC2ibm5uRHAUQLpubehUFEwpqm5ubm5ubm5ubm5ubcjYXbpub
        m5ubaS0vm5ubm2AkMpebm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm2+Im5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ttBAN+m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm3QGCk6bm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm186jZubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>